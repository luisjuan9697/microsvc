pipeline {
    agent any
    
    environment {
        AWS_ACCOUNT_ID = credentials('ACCOUNT_ID')
        AWS_ECR_REPO_NAME = credentials('ECR_REPO1')
        AWS_DEFAULT_REGION = 'us-east-1'
        REPOSITORY_URI = "${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/"
        GIT_REPO_NAME = "End-to-End-Kubernetes-Three-Tier-DevSecOps-Project"
        GIT_USER_NAME = "luisjuan9697"
    }
    
    tools {
        jdk 'jdk'
        nodejs 'nodejs'
    }
    
    stages {
        stage('Cleaning Workspace') {
            steps {
                cleanWs()
            }
        }
        
        stage('Checkout from Git') {
            steps {
                git credentialsId: 'GITHUB', url: 'https://github.com/luisjuan9697/End-to-End-Kubernetes-Three-Tier-DevSecOps-Project.git'
            }
        }
        
        stage('Trivy File Scan') {
            steps {
                dir('Application-Code/frontend') {
                    sh 'trivy fs . > trivyfs.txt'
                }
            }
        }
        
        stage("Docker Image Build") {
            steps {
                dir('Application-Code/frontend') {
                    script {
                        sh 'docker system prune -f'
                        sh 'docker container prune -f'
                        sh "docker build -t ${AWS_ECR_REPO_NAME} ."
                    }
                }
            }
        }
        
        stage("ECR Image Pushing") {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${REPOSITORY_URI}"
                    sh "docker tag ${AWS_ECR_REPO_NAME} ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}"
                    sh "docker push ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}"
                }
            }
        }
        
        stage("TRIVY Image Scan") {
            steps {
                sh "trivy image ${REPOSITORY_URI}${AWS_ECR_REPO_NAME}:${BUILD_NUMBER} > trivyimage.txt"
            }
        }
        
        stage('Checkout Code') {
            steps {
                git credentialsId: 'GITHUB', url: 'https://github.com/luisjuan9697/End-to-End-Kubernetes-Three-Tier-DevSecOps-Project.git'
            }
        }
        
        stage('Update Deployment file') {
            steps {
                dir('Kubernetes-Manifests-file/Frontend') {
                    withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                        script {
                            sh '''
                                git config user.email "lluisjuanguerrero@gmail.com"
                                git config user.name "luisjuan9697"
                                BUILD_NUMBER=${BUILD_NUMBER}
                                echo $BUILD_NUMBER
                                imageTag=$(grep -oP '(?<=frontend:)[^ ]+' deployment.yaml)
                                echo $imageTag
                                sed -i "s/${AWS_ECR_REPO_NAME}:${imageTag}/${AWS_ECR_REPO_NAME}:${BUILD_NUMBER}/" deployment.yaml
                                git add deployment.yaml
                                git commit -m "Update deployment Image to version ${BUILD_NUMBER}"
                                git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME} HEAD:master
                            '''
                        }
                    }
                }
            }
        }
    }
}
